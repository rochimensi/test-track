@model TestTrack.ViewModels.TestCaseVM

@{
    ViewBag.Title = "Create";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "TestCases"))
{
    
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.TestSuiteID)
    @Html.HiddenFor(model => model.TestCaseID)

    <fieldset>
        <legend>Test Case</legend>
        <div class="form-group tc-title">
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="row tc-info">
            <div class="col-md-3">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Method)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Method, Model.Methods, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Method)
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Type)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Type, Model.Types, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Type)
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Priority)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Priority, Model.Priorities, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Priority)
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Tags)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Tags, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Tags)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.PreConditions)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.PreConditions, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PreConditions)
            </div>
        </div>

        <div class="header header-btn">
            <strong>Steps</strong>
            <a href="javascript:testCaseCtrl.addRow();" class="btn btn-default btn-md">Add Step</a>
        </div>
        <div class="content-body">
            <table class="table" id="stepsTable">
                <thead>
                    <tr>
                        <th>
                            <strong>#</strong>
                        </th>
                        <th>
                            <strong>Action</strong>
                        </th>
                        <th>
                            <strong>Expected Result</strong>
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Steps)
                    {
                        var step = 1;
                        <tr>
                            <td>
                                <input type="hidden" id="stepsID_@step" name="stepsID" value="@item.StepId">
                                <label>@step</label></td>
                            <td>
                                <textarea class="form-control" name="action">@item.Action</textarea>
                            </td>
                            <td>
                                <textarea class="form-control" name="result">@item.Result</textarea>
                            </td>
                            <td>
                                <a id="removeStep_@step" onclick="testCaseCtrl.removeRow(this)" href="#stepsTable" style="float: right;"><i class="glyphicon glyphicon-remove"></i></a>
                            </td>
                        </tr>
                        step++;
                    }
                </tbody>
            </table>
        </div>

        <p>
            <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-floppy-disk"></i>Save</button>
            @Html.ActionLink("Cancel", "Index", "TestCases", new { id = Model.TestCaseID }, new { @class = "btn btn-default" })
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // <![CDATA[
        var testCaseCtrl = {};
        $(document).ready(function () {

            var count = 1;

            testCaseCtrl.addRow = function () {
                //copy the table row and clear the value of the input, then append the row to the end of the table
                var row = $("#stepsTable tbody tr:first").clone();
                row.find("textarea").each(function () {
                    $(this).val('');
                }).end();
                row.find("label").text(++count);
                row.find("input").val("0");
                row.find("a").attr("id", "removeStep_" + count);
                row.appendTo("#stepsTable");
            }

            testCaseCtrl.removeRow = function (element) {
                if ($("#stepsTable tbody tr").length > 1) {
                    $(element).closest("tr").remove();
                }
            }
        });
        // ]]>
    </script>
}