@model TestTrack.Models.TestCase

@{
    ViewBag.Title = Model.TestCaseID > 0 ? "Edit" : "Add";
    ViewBag.BtnSaveValue = Model.TestCaseID > 0 ? "Save" : "Create";}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Save", "TestCases")) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TestCase</legend>

        @Html.HiddenFor(model => model.TestCaseID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new {@cols="80" , @rows="4" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PreConditions)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.PreConditions, new {@cols="80" , @rows="4" })
            @Html.ValidationMessageFor(model => model.PreConditions)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Tags)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Tags)
            @Html.ValidationMessageFor(model => model.Tags)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TestSuiteID, "TestSuite")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TestSuiteID", String.Empty)
            @Html.ValidationMessageFor(model => model.TestSuiteID)
        </div>

        <p>
            <input type="submit" value="@ViewBag.BtnSaveValue" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
