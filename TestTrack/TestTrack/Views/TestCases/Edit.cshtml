@model TestTrack.ViewModels.TestCaseVM

@{
    ViewBag.Title = "Test Case";
}

<!-- Header -->
@Html.Partial("~/Views/Shared/_Header.cshtml")

<!-- Main -->
<div class="container">
    <div class="main">
        <div class="page-header">
            <h1>Edit Test Case</h1>
        </div>

        @using (Html.BeginForm("Edit", "TestCases"))
        {
    
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            @Html.HiddenFor(model => model.TestSuiteID)
            @Html.HiddenFor(model => model.TestCaseID)

            <fieldset>
                <div class="form-group tc-title">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Title)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Title)
                    </div>
                </div>

                <div class="row tc-info">
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Method)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.Method, Model.Methods, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Method)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Type)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.Type, Model.Types, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Type)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Priority)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.Priority, Model.Priorities, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Priority)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Tags)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.Tags, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Tags)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Description)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PreConditions)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.PreConditions, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PreConditions)
                    </div>
                </div>

                <div class="header header-btn">
                    <strong>Steps</strong>
                    <a href="javascript:testCaseCtrl.addRow();" class="btn btn-default btn-md">Add Step</a>
                </div>
                <div class="content-body">
                    <table class="table" id="stepsTable">
                        <thead>
                            <tr>
                                <th>
                                    <strong>#</strong>
                                </th>
                                <th>
                                    <strong>Action</strong>
                                </th>
                                <th>
                                    <strong>Expected Result</strong>
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Steps.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        <input type="hidden" id="stepsID_@Model.labels[i]" name="stepsID" value="@Model.Steps.ElementAt(i).StepId">
                                        <label>@Model.labels[i]</label></td>
                                    <td>
                                        <textarea class="form-control" name="action">@Model.Steps.ElementAt(i).Action</textarea>
                                    </td>
                                    <td>
                                        <textarea class="form-control" name="result">@Model.Steps.ElementAt(i).Result</textarea>
                                    </td>
                                    <td>
                                        <a id="removeStep_@Model.labels[i]" onclick="testCaseCtrl.removeRow(this)" href="#stepsTable" style="float: right;"><i class="glyphicon glyphicon-remove"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <p>
                    <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-floppy-disk"></i>Save</button>
                    @Html.ActionLink("Cancel", "Index", "TestCases", new { id = Model.TestCaseID }, new { @class = "btn btn-default" })
                </p>
            </fieldset>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // <![CDATA[
        var testCaseCtrl = {};
        $(document).ready(function () {

            testCaseCtrl.addRow = function () {
                //copy the table row and clear the value of the input, then append the row to the end of the table
                var row = $("#stepsTable tbody tr:last").clone();
                row.find("textarea").each(function () {
                    $(this).val('');
                }).end();
                var label = parseInt(row.find("label").text());
                row.find("label").text(label + 1);
                row.find("input").val("0");
                row.find("a").attr("id", "removeStep_" + label);
                row.appendTo("#stepsTable");
            }

            testCaseCtrl.removeRow = function (element) {
                if ($("#stepsTable tbody tr").length > 1) {
                    $(element).closest("tr").remove();
                }
            }
        });
        // ]]>
    </script>
}