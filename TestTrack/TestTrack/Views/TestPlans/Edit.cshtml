@model TestTrack.ViewModels.TestPlanVM

@{
    ViewBag.Title = "Test Plans";
}

@using (Html.BeginForm("Edit", "TestPlans"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Edit Test Plan</legend>

        @Html.HiddenFor(model => model.TestPlanID)
        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Title)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>
        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.IterationID)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.IterationID, Model.Iterations, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IterationID)
            </div>
        </div>
        <div class="form-group">
            <div class="editor-label">
                @Html.LabelFor(model => model.TeamID)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.TeamID, Model.Teams, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TeamID)
            </div>
        </div>
        <p>
            <input type="submit" value="Save" class="btn btn-default" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
