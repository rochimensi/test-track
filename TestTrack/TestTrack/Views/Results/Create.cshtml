@model TestTrack.ViewModels.ResultsListVM

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.TestCaseID)
    @Html.HiddenFor(model => model.TestRunID)
    @Html.HiddenFor(model => model.SelectedStateName)

    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header @Model.SelectedStateName.ToLower()">
                <a type="button" class="close" href="/ExecuteTestRun/Index/@Model.TestRunID" aria-hidden="true">&times;</a>
                <h4 class="modal-title">Add Test Result</h4>
            </div>
            <div class="modal-body">
                <fieldset>
                    <label>Status</label>
                    <p>
                        @switch (Model.SelectedStateName)
                        {
                            case "Blocked":
                            <span class="badge blocked">Blocked</span>
                                break;
                            case "Failed":
                            <span class="badge failed">Failed</span>
                                break;
                            case "Passed":
                            <span class="badge passed">Passed</span>
                                break;
                            case "Retest":
                            <span class="badge retest">Retest</span>
                                break;
                            default:
                            <span class="badge">Untested</span>
                                break;
                        }
                    </p>
                    @if (Model.SelectedStateName == "Failed")
                    {
                        <div class="form-group">
                            <div class="editor-label">
                                <label>Defect title</label>
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.DefectTitle, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DefectTitle)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="editor-label">
                                <label>Severity</label>
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.Severity, Model.Severities, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Severity)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="editor-label">
                                <label>Description</label>
                            </div>
                            <div class="editor-field">
                                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Comments)
                            </div>
                            <small>Leave comments about your defect.</small>
                        </div>
                        <div class="form-group">
                            <div class="editor-label">
                                <label>Labels</label>
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.Labels, new { @class = "form-control", @placeholder = "label1,label2,label3" })
                                @Html.ValidationMessageFor(model => model.Labels)
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <div class="editor-label">
                                <label>Comments</label>
                            </div>
                            <div class="editor-field">
                                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Comments)
                            </div>
                            <small>Describe your test result.</small>
                        </div>
                    }
                </fieldset>
            </div>
            <div class="modal-footer">
                <a class="btn btn-default" href="/ExecuteTestRun/Index/@Model.TestRunID">Cancel</a>
                <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-save"></i>Add Test Result</button>
            </div>
        </div>
    </div>
}
